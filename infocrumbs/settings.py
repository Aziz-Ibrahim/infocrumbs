"""
Django settings for infocrumbs project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

if os.path.exists('env.py'):
    import env


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m&om&9$k0u*tu+eaz6ydz=ie9e!+-d4u%o$n+(=jh@=o7f+mtw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # required by allauth
    'taggit',

    #Third-party apps
    'allauth',
    'allauth.account',
    'crispy_forms',
    'crispy_bootstrap5',

    # Custom apps
    'accounts',
    'core',
    'checkout',
    'crumbs',
    'feedback',
    'pipeline',
    'preferences',
    'subscriptions',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # default
    'allauth.account.auth_backends.AuthenticationBackend',  # allauth
]


SITE_ID = 1

LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'
ACCOUNT_LOGIN_METHODS = {'username', 'email'}  # Set of allowed login methods
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.CustomSignupForm'
}
ACCOUNT_EMAIL_VERIFICATION = 'none'

CRISPY_ALLOWED_TEMPLATE_PACK = 'bootstrap5'
CRISPY_TEMPLATE_PACK = 'bootstrap5'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'infocrumbs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'infocrumbs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Stripe

STRIPE_CURRENCY = 'gbp'
STRIPE_PUBLIC_KEY = os.getenv('STRIPE_PUBLIC_KEY', '')
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY', '')
STRIPE_WEBHOOK_SECRET = os.getenv('STRIPE_WH_SECRET', '')

# Stripe price lookup table
STRIPE_PRICE_LOOKUP = {
    'basic_weekly': 'price_123abcBasicWeek',
    'basic_monthly': 'price_456abcBasicMonth',
    'basic_annually': 'price_789abcBasicYear',
    'premium_weekly': 'price_123xyzPremiumWeek',
    'premium_monthly': 'price_456xyzPremiumMonth',
    'premium_annually': 'price_789xyzPremiumYear',
}

# API keys for external services

# Hugging Face API
HF_API_URL = os.environ.get('HF_API_URL')
HF_API_TOKEN = os.environ.get('HF_API_TOKEN')

# Environment News
NEWSDATA_API_KEY = os.environ.get('NEWSDATA_API_KEY')
NEWSDATA_API_URL = (
    'https://newsdata.io/api/1/latest?'
    f'apikey={NEWSDATA_API_KEY}'
    '&category=environment,top&language=en'
)

# News & Media APIs
NEWS_API_KEY = os.environ.get('NEWS_API_KEY')
NEWS_API_URL = (
    'https://newsapi.org/v2/top-headlines?'
    'country=gb&'
    f'apiKey={NEWS_API_KEY}'
)
NEWSDATA_WORLD_NEWS_URL = (
    'https://newsdata.io/api/1/news?'
    f'apikey={NEWSDATA_API_KEY}'
    '&q=world news OR global events OR international affairs OR breaking news&category=top,politics,world&language=en'
)

# Music
LASTFM_API_KEY = os.getenv('LASTFM_API_KEY')
LASTFM_BASE_URL = "http://ws.audioscrobbler.com/2.0/"
NEWSDATA_MUSIC_NEWS_URL = (
    'https://newsdata.io/api/1/news?'
    f'apikey={NEWSDATA_API_KEY}'  # Reusing the existing NewsData.io key
    '&q=music OR album OR artist OR band OR song OR concert OR festival OR tour OR genre&category=music&language=en'
)

# Finance
FINNHUB_API_KEY = os.environ.get('FINNHUB_API_KEY')
FINNHUB_API_URL = (
    'https://finnhub.io/api/v1/news?'
    'category=general&'
    f'token={FINNHUB_API_KEY}'
)

# Sports
THENEWS_API_KEY = os.environ.get('THENEWSAPI_API_KEY')
THENEWSAPI_SPORTS_URL = os.environ.get('THENEWSAPI_SPORTS_URL')
NEWSDATA_FITNESS_URL = (
    'https://newsdata.io/api/1/news?'
    f'apikey={NEWSDATA_API_KEY}'
    '&q=fitness OR gym OR workout OR health OR nutrition&category=health,sports&language=en'
)

# Technology
MEDIASTACK_API_KEY = os.getenv('MEDIASTACK_API_KEY')
MEDIASTACK_TECHNOLOGY_URL = (
    'http://api.mediastack.com/v1/news?'
    'categories=technology&'
    'languages=en&'
    f'access_key={MEDIASTACK_API_KEY}'
)

# Gardeining / Plants
PERENUAL_API_KEY = os.environ.get('PERENUAL_API_KEY')
PERENUAL_API_URL = os.environ.get('PERENUAL_API_URL')
PERENUAL_GUIDE_BASE_URL = os.environ.get('PERENUAL_GUIDE_BASE_URL')
TREFLE_API_KEY = os.environ.get('TREFLE_API_KEY')
TREFLE_API_URL = os.environ.get('TREFLE_API_URL')
PERMAPEOPLE_KEY_ID = os.environ.get('PERMAPEOPLE_KEY_ID')
PERMAPEOPLE_KEY_SECRET = os.environ.get('PERMAPEOPLE_KEY_SECRET')
PERMAPEOPLE_API_URL = os.environ.get('PERMAPEOPLE_API_URL')

# Trivia / Fun
USELESS_FACTS_API_URL = os.getenv('USELESS_FACTS_API_URL')
CHUCKNORRIS_API_URL = os.getenv('CHUCKNORRIS_API_URL')
OPEN_TRIVIA_API_URL = os.getenv('OPEN_TRIVIA_API_URL')

# Food / Drink
SPOONACULAR_API_KEY = os.getenv('SPOONACULAR_API_KEY')
SPOONACULAR_API_URL = (
    'https://api.spoonacular.com/recipes/random?'
    f'apiKey={SPOONACULAR_API_KEY}'
)
NEWSDATA_FOOD_DRINK_URL = (
    'https://newsdata.io/api/1/news?'
    f'apikey={NEWSDATA_API_KEY}'
    '&q=food OR drink OR recipe OR nutrition OR diet OR cooking OR restaurant OR trends&category=food&language=en'
)

# Fashion
NEWSAPI_FASHION_URL = (
    'https://newsapi.org/v2/everything?'
    'q=fashion OR style OR trend OR designer OR runway OR apparel OR luxury fashion OR haute couture&'
    'language=en&'
    'sortBy=relevancy&'
    'pageSize=25&'
    f'apiKey={NEWS_API_KEY}'
)

# Cars and Transport
NEWSAPI_CARS_TRANSPORT_URL = (
    'https://newsapi.org/v2/everything?'
    'q=cars OR automobile OR automotive OR transport OR transportation OR electric vehicle OR EV OR self-driving OR public transport OR train OR bus OR plane OR truck OR shipping OR vehicle OR traffic&'
    'language=en&'
    'sortBy=relevancy&'
    'pageSize=25&'
    f'apiKey={NEWS_API_KEY}'
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

